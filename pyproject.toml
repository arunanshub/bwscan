[tool.poetry]
name = "bwscanner"
version = "0.1.0"
description = "Scan BuiltWith for technologies that match a given regex."
authors = ["Arunanshu Biswas <mydellpc07@gmail.com>"]
readme = "README.md"
repository = "https://github.com/arunanshub/bwscan"
license = "GPL-3.0-only"
scripts = { bwscanner = "bwscanner.__main__:main" }

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/arunanshub/bwscan/issues"
"Changelog" = "https://github.com/arunanshub/bwscan/blob/master/CHANGELOG.md"

[tool.poetry.dependencies]
python = "^3.8"
lxml = "^5.0.0"
aiohttp = "^3.8.5"
brotli = "^1.1.0"

[tool.poetry.group.dev.dependencies]
lxml-stubs = "^0.5.0"
hypothesis = { extras = ["cli", "codemods"], version = "^6.87.4" }
pytest = "^8.0.0"
pytest-xdist = "^3.3.1"
mypy = "^1.5.1"
ruff = "^0.4.0"
commitizen = "^3.10.0"
pre-commit = "^3.5.0"
pytest-cov = "^5.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# checkers
[tool.black]
line-length = 79
target-verson = "py38"

[tool.mypy]
python_version = "3.10"
warn_unused_configs = true
warn_unused_ignores = true

show_error_codes = true
pretty = true

warn_redundant_casts = true
# warn_return_any = true
no_implicit_optional = true
check_untyped_defs = true
disallow_untyped_defs = true
disallow_any_unimported = true

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "if TYPE_CHECKING",
  "if typing.TYPE_CHECKING",
]

[tool.pytest.ini_options]
addopts = "--strict-config --strict-markers"

[tool.ruff]
line-length = 79
target-version = "py38"
exclude = ["docs"]
ignore = ["ANN101", "ANN102", "ANN401", "B024", "PLR0913"]
select = [
  "ANN",
  "B",
  "E",
  "F",
  "W",
  "I",
  "RET",
  "EM",
  "UP",
  "C90",
  "PTH",
  "SIM",
  "TCH",
  "PIE",
  "TID",
  "G",
  "PL",
]

[tool.ruff.isort]
required-imports = ["from __future__ import annotations"]
combine-as-imports = true
